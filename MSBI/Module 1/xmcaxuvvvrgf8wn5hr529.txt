ASSIGNMENTS:

1. WORK ON IMPORT AND EXPORT - TRY TO CHECK EACH STEP AND UNDERSTAND THEN LOAD DB TO FF AND FF TO DB.

2. IMPLEMENT SAME DB TO FF AND FF TO DB USING SSIS DATAFLOW TASK.

3. CREATE A TABLE STUDENTS WITH THE BELOW COLUMNS AND HAVE ATLEST 15 TO 20 ENTRIES:
STUDENTS:
ID  NAME  AGE   TOTAL_MARKS  MOBILE  CLASS

------------------
TOTAL_MARKS> 900 - 4 RECORDS
TOTAL_MARKS> 800 - 4 RECORDS
TOTAL_MARKS> 700 - 4 RECORDS
TOTAL_MARKS> 600 - 4 RECORDS
TOTAL_MARKS> 500 - 4 RECORDS
TOTAL_MARKS< 500 - 5 RECORDS

NAME - MAKE DUPLICATES ( 5 RECORDS) - 7 
AGE - 28, 25, 26, 27
CLASS - 8, 9, 10

AGGREGATE TRANSFORMATION

DATAFLOW TASK1 --> NAME, SUM(MARKS), AVG(MARKS)
DATAFLOW TASK2 --> AGE, SUM(MARKS), AVG(MARKS)
DATAFLOW TASK3 --> CLASS, SUM(MARKS), AVG(MARKS)

4. DOWNLOAD ADVENTUREWORKSDWH2012/2014/2008R2 AND MAKE THE DB READY. PLEASE DO THE SAME EXAMPLE FOR DERIVED COLUMN WHICH I DID IN THE CLASS.
https://msftdbprodsamples.codeplex.com/

5. GO TO DERVIED COLUMN TRANSFORMATION AND SEE ALL THE FUNCTIONS OF DIFFERENT CATEGORIES AND TRY TO UNDERSTAND AND IF POSSIBLE IMPLEMENT FEW FUNCTIONS.

6. DATA CONVERSION - IMPLEMENT DATA CONVERSION WITH DATA CONVERSION TRANSFORMATION AS WELL AS DERIVED COLUMN TRANSFORMATION.

7. CONDITIONAL SPLIT - PLEASE DO SAME AS I DID IN THE SESSION

TAKE GENDER TABLE AND LOAD ALL MALE DATA IN ONE FILE AND FEMALE DATA IN OTHER FILE.

IN THE ABOVE STUDENTS TABLE, 
IF TOTAL_MARKS>=900 -- LOAD TO ONE FILE (TOPPERS)
IF TOTAL_MARKS>=800 && TOTAL_MARKS<900 -- LOAD TO ONE FILE -- 
IF TOTAL_MARKS>=700  && TOTAL_MARKS<800 -- LOAD TO DISTINCTION FILE
IF TOTAL_MARKS>=600 && TOTAL_MARKS<700 -- LOAD TO FIRSTCLASS
IF TOTAL_MARKS>=500 && TOTAL_MARKS<600 -- LOAD TO SECOND CLASS
OTHERS -- LOAD TO FAILED FILE


8. MERGE TRANSFORMATION

PLEASE DO THE SAME WHAT I DID IN CLASS
TAKE CUSTOMERS TABLE FROM ETLCLASSES DATABASE AND CUSTOMERS.TXT SOURCE FLATFILE (5 ROWS) AND DO MERGE - SORT AND DELETE DUPLICATES

9. UNIONALL
PLEASE DO THE SAME WHAT I DID IN CLASS

10. MULTICAST
PLEASE DO THE SAME WHAT I DID IN CLASS

11. MERGE JOIN
JOIN
CROSS JOIN - CARTESIAN PRODUCT - 
INNER JOIN - COMMON DATA BASED ON CONDITION
OUTER JOIN 

LEFT JOIN - TOTAL DATA FROM LEFT TABLE + MATCHING DATA FROM RIGHT TABLE + FOR NON MATCHING WITH THE LEFT TABLE FILL WITH NULLS.

RIGHT JOIN - TOTAL DATA FROM RIGHT TABLE + MATCHING DATA FROM LEFT TABLE + FOR NON MATCHING WITH THE RIGHT TABLE FILL WITH NULLS.

FULL OUTER JOIN - LEFT JOIN + RIGHT JOIN
TOTAL DATA FROM LEFT TABLE + TOTAL DATA FROM RIGHT TABLE + MATCHING DATA FROM BOTH TABLES + FOR NON MATCHING DATA FROM BOTH TABLES FILL WITH NULLS.


12. LOOKUP

